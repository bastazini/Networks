#################################################
#Basic code for modularity and nestedness (weighted NODF) analyses in R
##################################################
# packages
require(bipartite)
require(igraph)
require(multigraph)

##import matrix
rede=read.csv(file.choose(), h=T, row.names = 1, sep=";")
##Create a random network
rede=genweb(N1 = 15, N2 = 20, dens = 3)

## Ploting the network
plotweb(rede,text.rot= 90, labsize=1,arrow="down.center",col.low="darkgreen", col.high="darkblue", col.interaction = "grey",
 arrow = "down")

#Nestedness (weighted NODF)
## calculate observed WNODF and null models
#observed value
obs.nest =unlist(networklevel(rede, index="weighted NODF"))
#create null models
nulls = nullmodel(rede, N=1000, method=3)
#calculate wNODF for null models
null.nest = unlist(sapply(nulls, networklevel, index="weighted NODF"))
#save values in your folder
write.table(null.nest,"aninhamento.txt")
null.nest=as.matrix(null.nest)
#calculate p-values and 95%CI
p.val = sum(null.nest>=obs.nest) / length(null.nest);p.val

#95%CI
hist(as.vector(null.nest), col="grey", main="", xlim=c(min(obs.nest, min(null.nest)), max(obs.nest, max(null.nest))))
quant=quantile(null.nest,prob=(c(0.025,0.5,0.975)))
abline(v=obs.nest, col="red", lwd=2)
abline(v=quant, col="black", lwd=2)

#ifelse(praw >=0.5, 1-praw, praw)    # P-value

